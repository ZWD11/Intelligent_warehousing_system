{"remainingRequest":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\WarehouseManager\\src\\WarehouseManagerVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\WarehouseManager\\src\\WarehouseManagerVue\\src\\components\\goods\\GoodsManage.vue?vue&type=template&id=5b2e8222&scoped=true&","dependencies":[{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\WarehouseManager\\src\\WarehouseManagerVue\\src\\components\\goods\\GoodsManage.vue","mtime":1699272559892},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\WarehouseManager\\src\\WarehouseManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677927572803},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\WarehouseManager\\src\\WarehouseManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677927572803},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\WarehouseManager\\src\\WarehouseManagerVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1677927576192},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\WarehouseManager\\src\\WarehouseManagerVue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1677927577975},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\WarehouseManager\\src\\WarehouseManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677927572803},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\WarehouseManager\\src\\WarehouseManagerVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1677927577316}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}